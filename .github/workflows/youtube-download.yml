name: Download YouTube Video

on:
  workflow_dispatch:
    inputs:
      youtube_url:
        description: 'URL of the YouTube video to download'
        required: true

jobs:
  download_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable xvfb
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get install -fy
          npm install puppeteer puppeteer-stream xvfb

      - name: Download YouTube video
        run: |
          cat << 'EOF' > download_video.js
          const fs = require('fs');
          const {executablePath} = require('puppeteer');
          const { launch, getStream } = require('puppeteer-stream');
          const Xvfb = require('xvfb');

          const downloadVideo = async (url) => {
            const xvfb = new Xvfb({
              silent: true,
              xvfb_args: ['-screen', '0', '1920x1080x30', '-ac'],
            });
            xvfb.start();

            const browser = await launch({
              executablePath: executablePath(),
              defaultViewport: {
                width: 1080,
                height: 1920,
              },
              args: [
                '--headless=new',
                '--no-sandbox',
                '--window-size=1080,1920',
                '--disable-setuid-sandbox',
                '--ozone-override-screen-size=1080,1920',
              ],
            });

            const page = await browser.newPage();
            await page.goto(url);
            const stream = await getStream(page, { audio: true, video: true });
            const file = fs.createWriteStream('./downloaded_video.mp4');
            stream.pipe(file);

            await new Promise(resolve => setTimeout(resolve, 10000)); // Adjust duration

            stream.destroy();
            file.close();
            await browser.close();
            xvfb.stop();
          };

          const url = process.argv[2];
          if (!url) {
            console.error('Please provide a YouTube URL as an argument.');
            process.exit(1);
          }

          downloadVideo(url).catch(console.error);
          EOF
          node download_video.js "${{ github.event.inputs.youtube_url }}"
        env:
          DISPLAY: ':99'

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'youtube-video-${{ github.run_id }}'
          release_name: 'YouTube Video Download ${{ github.run_id }}'
          draft: false
          prerelease: false

      - name: Upload video to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './downloaded_video.mp4'
          asset_name: 'downloaded_video.mp4'
          asset_content_type: 'video/mp4'
