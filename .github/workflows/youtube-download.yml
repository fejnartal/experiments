name: Record YouTube Video and Release

on:
  workflow_dispatch:
    inputs:
      youtube_url:
        description: "URL del video de YouTube"
        required: true
        type: string

jobs:
  record-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Instalar dependencias necesarias
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget \
            gnupg \
            fonts-ipafont-gothic \
            fonts-wqy-zenhei \
            fonts-thai-tlwg \
            fonts-kacst \
            fonts-freefont-ttf \
            libxss1 \
            pulseaudio \
            xvfb \
            google-chrome-stable \
            ffmpeg \
            --no-install-recommends
          
          # Instalar dependencias Node (incluye puppeteer-stream y plugins)
          npm install puppeteer-stream puppeteer puppeteer-extra puppeteer-extra-plugin-stealth

      - name: Iniciar servidor X virtual (Xvfb)
        run: |
          Xvfb :99 -screen 0 1280x720x24 -ac &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Grabar video desde YouTube usando puppeteer-stream
        env:
          YOUTUBE_URL: ${{ inputs.youtube_url }}
        run: |
          cat <<'EOF' > record.js
          const puppeteerStream = require('puppeteer-stream');
          const fs = require('fs');
          (async () => {
            // Usamos el método launch de puppeteer-stream
            const browser = await puppeteerStream.launch({
              headless: true,
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--enable-usermedia-screen_capturing',
                '--allow-http-screen-capture',
                '--use-fake-ui-for-media-stream',
                '--use-fake-device-for-media-stream',
                '--autoplay-policy=no-user-gesture-required'
              ],
              defaultViewport: null,
              executablePath: '/usr/bin/google-chrome-stable'
            });
            const page = await browser.newPage();
            console.log("Cargando YouTube...");
            await page.goto(process.env.YOUTUBE_URL, { waitUntil: 'networkidle2' });
            console.log("Esperando que el video cargue...");
            await page.waitForSelector('video', { timeout: 60000 });
            
            // Inicia la reproducción del video
            await page.evaluate(() => {
              const video = document.querySelector('video');
              video.play();
              video.volume = 1.0;
            });
            
            console.log("Esperando que el video empiece a reproducirse...");
            await page.waitForFunction(() => {
              const video = document.querySelector('video');
              return video && !video.paused && video.currentTime > 0;
            }, { timeout: 60000 });
            
            console.log("Iniciando grabación con puppeteer-stream...");
            // Inicia la captura del stream (audio y video)
            const stream = await puppeteerStream.start(page, { audio: true, video: true });
            const out = fs.createWriteStream('video.webm');
            stream.pipe(out);
            
            console.log("Grabando durante 60 segundos...");
            await new Promise(resolve => setTimeout(resolve, 60000));
            
            console.log("Finalizando grabación...");
            stream.destroy();
            await browser.close();
          })();
          EOF
          node record.js

      - name: Convertir video a MP4 con FFmpeg
        run: |
          ffmpeg -i video.webm -vf "scale=1280:720:flags=lanczos" -c:v libx264 -preset slow -crf 18 -c:a aac -b:a 192k video_final.mp4

      - name: Subir video como Release en GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NAME=$(date +"%Y-%m-%d")
          gh release create "$RELEASE_NAME" "video_final.mp4" --title "Video grabado el $RELEASE_NAME" --notes "Grabación automática desde YouTube"
