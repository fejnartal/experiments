name: Descargar y subir vídeo de YouTube

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL del vídeo de YouTube'
        required: true
        type: string

jobs:
  download_and_upload:
    runs-on: windows-latest
    steps:
      # Paso 1: Usar el cache para instalar Node.js
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Paso 2: Instalar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Paso 3: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 4: Instalar dependencias
      - name: Install dependencies
        run: |
          npm install puppeteer puppeteer-stream

      # Paso 5: Crear el script `downloadVideo.js` directamente en el runner
      - name: Crear el script de descarga
        run: |
          echo "const puppeteer = require('puppeteer');" > downloadVideo.js
          echo "const fs = require('fs');" >> downloadVideo.js
          echo "const path = require('path');" >> downloadVideo.js
          echo "const puppeteerStream = require('puppeteer-stream');" >> downloadVideo.js
          echo "" >> downloadVideo.js
          echo "async function downloadVideo(url, outputDir) {" >> downloadVideo.js
          echo "  const browser = await puppeteer.launch();" >> downloadVideo.js
          echo "  const page = await browser.newPage();" >> downloadVideo.js
          echo "  await page.goto(url, { waitUntil: 'networkidle2' });" >> downloadVideo.js
          echo "  const videoStream = await puppeteerStream(page, 'video');" >> downloadVideo.js
          echo "  const filePath = path.join(outputDir, 'video_' + Date.now() + '.mp4');" >> downloadVideo.js
          echo "  const fileStream = fs.createWriteStream(filePath);" >> downloadVideo.js
          echo "  videoStream.pipe(fileStream);" >> downloadVideo.js
          echo "" >> downloadVideo.js
          echo "  fileStream.on('finish', () => {" >> downloadVideo.js
          echo "    console.log('Vídeo descargado a ' + filePath);" >> downloadVideo.js
          echo "    browser.close();" >> downloadVideo.js
          echo "  });" >> downloadVideo.js
          echo "}" >> downloadVideo.js
          echo "" >> downloadVideo.js
          echo "const url = process.argv[2];" >> downloadVideo.js
          echo "const outputDir = process.argv[3];" >> downloadVideo.js
          echo "" >> downloadVideo.js
          echo "downloadVideo(url, outputDir);" >> downloadVideo.js

      # Paso 6: Descargar el vídeo de YouTube
      - name: Descargar el vídeo usando puppeteer-stream
        run: |
          node downloadVideo.js ${{ github.event.inputs.url }} ${{ runner.temp }}

      # Paso 7: Crear un archivo con la fecha de ejecución
      - name: Generar nombre del archivo
        id: timestamp
        run: |
          echo "TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
          echo "video_file=${{ runner.temp }}/video_${{ env.TIMESTAMP }}.mp4" >> $GITHUB_ENV

      # Paso 8: Subir el vídeo como una release
      - name: Upload video as release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.video_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
